{"version":3,"file":"formatPhoneNumber.test.js","names":["call","func","_arguments","args","Array","prototype","slice","push","metadata","apply","formatPhoneNumber","_formatPhoneNumber","arguments","formatPhoneNumberIntl","_formatPhoneNumberIntl","describe","it","expect","to","throw","should","equal","undefined"],"sources":["../../source/libphonenumber/formatPhoneNumber.test.js"],"sourcesContent":["import _formatPhoneNumber, { formatPhoneNumberIntl as _formatPhoneNumberIntl } from './formatPhoneNumber.js'\nimport metadata from 'libphonenumber-js/min/metadata'\n\nfunction call(func, _arguments) {\n\tvar args = Array.prototype.slice.call(_arguments)\n\targs.push(metadata)\n\treturn func.apply(this, args)\n}\n\nfunction formatPhoneNumber() {\n\treturn call(_formatPhoneNumber, arguments)\n}\n\nfunction formatPhoneNumberIntl() {\n\treturn call(_formatPhoneNumberIntl, arguments)\n}\n\ndescribe('formatPhoneNumber', () => {\n\tit('should format phone numbers', () => {\n\t\texpect(() => formatPhoneNumber()).to.throw('must be a string')\n\t\t// formatPhoneNumber().should.equal('')\n\t\tformatPhoneNumber(null).should.equal('')\n\t\tformatPhoneNumber('').should.equal('')\n\t\texpect(() => _formatPhoneNumber('+1', 'NATIONAL')).to.throw('`metadata` argument not passed')\n\t\texpect(() => _formatPhoneNumber('+12133734253', undefined, metadata)).to.throw('Unknown \"format\"')\n\t\texpect(() => _formatPhoneNumber('+12133734253', '123', metadata)).to.throw('Unknown \"format\"')\n\t\tformatPhoneNumber('+1', 'NATIONAL').should.equal('')\n\t\tformatPhoneNumber('+12133734253', 'NATIONAL').should.equal('(213) 373-4253')\n\t\tformatPhoneNumber('+12133734253').should.equal('(213) 373-4253')\n\t\tformatPhoneNumber('+12133734253', 'INTERNATIONAL').should.equal('+1 213 373 4253')\n\t\t// Deprecated.\n\t\t// Legacy `format`s.\n\t\tformatPhoneNumber('+12133734253', 'National').should.equal('(213) 373-4253')\n\t\tformatPhoneNumber('+12133734253', 'International').should.equal('+1 213 373 4253')\n\t})\n\n\tit('should format international phone numbers', () => {\n\t\tformatPhoneNumberIntl('+12133734253').should.equal('+1 213 373 4253')\n\t})\n})"],"mappings":";;AAAA;;AACA;;;;;;;;AAEA,SAASA,IAAT,CAAcC,IAAd,EAAoBC,UAApB,EAAgC;EAC/B,IAAIC,IAAI,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBN,IAAtB,CAA2BE,UAA3B,CAAX;EACAC,IAAI,CAACI,IAAL,CAAUC,iBAAV;EACA,OAAOP,IAAI,CAACQ,KAAL,CAAW,IAAX,EAAiBN,IAAjB,CAAP;AACA;;AAED,SAASO,iBAAT,GAA6B;EAC5B,OAAOV,IAAI,CAACW,2BAAD,EAAqBC,SAArB,CAAX;AACA;;AAED,SAASC,qBAAT,GAAiC;EAChC,OAAOb,IAAI,CAACc,yCAAD,EAAyBF,SAAzB,CAAX;AACA;;AAEDG,QAAQ,CAAC,mBAAD,EAAsB,MAAM;EACnCC,EAAE,CAAC,6BAAD,EAAgC,MAAM;IACvCC,MAAM,CAAC,MAAMP,iBAAiB,EAAxB,CAAN,CAAkCQ,EAAlC,CAAqCC,KAArC,CAA2C,kBAA3C,EADuC,CAEvC;;IACAT,iBAAiB,CAAC,IAAD,CAAjB,CAAwBU,MAAxB,CAA+BC,KAA/B,CAAqC,EAArC;IACAX,iBAAiB,CAAC,EAAD,CAAjB,CAAsBU,MAAtB,CAA6BC,KAA7B,CAAmC,EAAnC;IACAJ,MAAM,CAAC,MAAM,IAAAN,2BAAA,EAAmB,IAAnB,EAAyB,UAAzB,CAAP,CAAN,CAAmDO,EAAnD,CAAsDC,KAAtD,CAA4D,gCAA5D;IACAF,MAAM,CAAC,MAAM,IAAAN,2BAAA,EAAmB,cAAnB,EAAmCW,SAAnC,EAA8Cd,iBAA9C,CAAP,CAAN,CAAsEU,EAAtE,CAAyEC,KAAzE,CAA+E,kBAA/E;IACAF,MAAM,CAAC,MAAM,IAAAN,2BAAA,EAAmB,cAAnB,EAAmC,KAAnC,EAA0CH,iBAA1C,CAAP,CAAN,CAAkEU,EAAlE,CAAqEC,KAArE,CAA2E,kBAA3E;IACAT,iBAAiB,CAAC,IAAD,EAAO,UAAP,CAAjB,CAAoCU,MAApC,CAA2CC,KAA3C,CAAiD,EAAjD;IACAX,iBAAiB,CAAC,cAAD,EAAiB,UAAjB,CAAjB,CAA8CU,MAA9C,CAAqDC,KAArD,CAA2D,gBAA3D;IACAX,iBAAiB,CAAC,cAAD,CAAjB,CAAkCU,MAAlC,CAAyCC,KAAzC,CAA+C,gBAA/C;IACAX,iBAAiB,CAAC,cAAD,EAAiB,eAAjB,CAAjB,CAAmDU,MAAnD,CAA0DC,KAA1D,CAAgE,iBAAhE,EAXuC,CAYvC;IACA;;IACAX,iBAAiB,CAAC,cAAD,EAAiB,UAAjB,CAAjB,CAA8CU,MAA9C,CAAqDC,KAArD,CAA2D,gBAA3D;IACAX,iBAAiB,CAAC,cAAD,EAAiB,eAAjB,CAAjB,CAAmDU,MAAnD,CAA0DC,KAA1D,CAAgE,iBAAhE;EACA,CAhBC,CAAF;EAkBAL,EAAE,CAAC,2CAAD,EAA8C,MAAM;IACrDH,qBAAqB,CAAC,cAAD,CAArB,CAAsCO,MAAtC,CAA6CC,KAA7C,CAAmD,iBAAnD;EACA,CAFC,CAAF;AAGA,CAtBO,CAAR"}
{"version":3,"file":"InputSmart.js","names":["React","useCallback","PropTypes","Input","AsYouType","parsePhoneNumberCharacter","getInputValuePrefix","removeInputValuePrefix","createInput","defaultMetadata","InputSmart","ref","country","international","withCountryCallingCode","metadata","rest","format","value","formatter","prefix","text","input","template","getTemplate","forwardRef","propTypes","string","isRequired","onChange","func","bool","object","defaultProps"],"sources":["../source/InputSmart.js"],"sourcesContent":["import React, { useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport Input from 'input-format/react-input'\nimport { AsYouType, parsePhoneNumberCharacter } from 'libphonenumber-js/core'\n\nimport { getInputValuePrefix, removeInputValuePrefix } from './helpers/inputValuePrefix.js'\n\nexport function createInput(defaultMetadata)\n{\n\t/**\n\t * `InputSmart` is a \"smarter\" implementation of a `Component`\n\t * that can be passed to `<PhoneInput/>`. It parses and formats\n\t * the user's and maintains the caret's position in the process.\n\t * The caret positioning is maintained using `input-format` library.\n\t * Relies on being run in a DOM environment for calling caret positioning functions.\n\t */\n\tfunction InputSmart({\n\t\tcountry,\n\t\tinternational,\n\t\twithCountryCallingCode,\n\t\tmetadata,\n\t\t...rest\n\t}, ref) {\n\t\tconst format = useCallback((value) => {\n\t\t\t// \"As you type\" formatter.\n\t\t\tconst formatter = new AsYouType(country, metadata)\n\t\t\tconst prefix = getInputValuePrefix({\n\t\t\t\tcountry,\n\t\t\t\tinternational,\n\t\t\t\twithCountryCallingCode,\n\t\t\t\tmetadata\n\t\t\t})\n\t\t\t// Format the number.\n\t\t\tlet text = formatter.input(prefix + value)\n\t\t\tlet template = formatter.getTemplate()\n\t\t\tif (prefix) {\n\t\t\t\ttext = removeInputValuePrefix(text, prefix)\n\t\t\t\t// `AsYouType.getTemplate()` can be `undefined`.\n\t\t\t\tif (template) {\n\t\t\t\t\ttemplate = removeInputValuePrefix(template, prefix)\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\ttext,\n\t\t\t\ttemplate\n\t\t\t}\n\t\t}, [country, metadata])\n\t\treturn (\n\t\t\t<Input\n\t\t\t\t{...rest}\n\t\t\t\tref={ref}\n\t\t\t\tparse={parsePhoneNumberCharacter}\n\t\t\t\tformat={format}/>\n\t\t)\n\t}\n\n\tInputSmart = React.forwardRef(InputSmart)\n\n\tInputSmart.propTypes = {\n\t\t/**\n\t\t * The parsed phone number.\n\t\t * \"Parsed\" not in a sense of \"E.164\"\n\t\t * but rather in a sense of \"having only\n\t\t * digits and possibly a leading plus character\".\n\t\t * Examples: `\"\"`, `\"+\"`, `\"+123\"`, `\"123\"`.\n\t\t */\n\t\tvalue: PropTypes.string.isRequired,\n\n\t\t/**\n\t\t * A function of `value: string`.\n\t\t * Updates the `value` property.\n\t\t */\n\t\tonChange: PropTypes.func.isRequired,\n\n\t\t/**\n\t\t * A two-letter country code for formatting `value`\n\t\t * as a national phone number (e.g. `(800) 555 35 35`).\n\t\t * E.g. \"US\", \"RU\", etc.\n\t\t * If no `country` is passed then `value`\n\t\t * is formatted as an international phone number.\n\t\t * (e.g. `+7 800 555 35 35`)\n\t\t * Perhaps the `country` property should have been called `defaultCountry`\n\t\t * because if `value` is an international number then `country` is ignored.\n\t\t */\n\t\tcountry: PropTypes.string,\n\n\t\t/**\n\t\t * If `country` property is passed along with `international={true}` property\n\t\t * then the phone number will be input in \"international\" format for that `country`\n\t\t * (without \"country calling code\").\n\t\t * For example, if `country=\"US\"` property is passed to \"without country select\" input\n\t\t * then the phone number will be input in the \"national\" format for `US` (`(213) 373-4253`).\n\t\t * But if both `country=\"US\"` and `international={true}` properties are passed then\n\t\t * the phone number will be input in the \"international\" format for `US` (`213 373 4253`)\n\t\t * (without \"country calling code\" `+1`).\n\t\t */\n\t\tinternational: PropTypes.bool,\n\n\t\t/**\n\t\t * If `country` and `international` properties are set,\n\t\t * then by default it won't include \"country calling code\" in the input field.\n\t\t * To change that, pass `withCountryCallingCode` property,\n\t\t * and it will include \"country calling code\" in the input field.\n\t\t */\n\t\twithCountryCallingCode: PropTypes.bool,\n\n\t\t/**\n\t\t * `libphonenumber-js` metadata.\n\t\t */\n\t\tmetadata: PropTypes.object.isRequired\n\t}\n\n\tInputSmart.defaultProps = {\n\t\tmetadata: defaultMetadata\n\t}\n\n\treturn InputSmart\n}\n\nexport default createInput()\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,SAASC,SAAT,EAAoBC,yBAApB,QAAqD,wBAArD;AAEA,SAASC,mBAAT,EAA8BC,sBAA9B,QAA4D,+BAA5D;AAEA,OAAO,SAASC,WAAT,CAAqBC,eAArB,EACP;EACC;AACD;AACA;AACA;AACA;AACA;AACA;EACC,SAASC,UAAT,OAMGC,GANH,EAMQ;IAAA,IANY;MACnBC,OADmB;MAEnBC,aAFmB;MAGnBC,sBAHmB;MAInBC,QAJmB;MAKnB,GAAGC;IALgB,CAMZ;IACP,MAAMC,MAAM,GAAGhB,WAAW,CAAEiB,KAAD,IAAW;MACrC;MACA,MAAMC,SAAS,GAAG,IAAIf,SAAJ,CAAcQ,OAAd,EAAuBG,QAAvB,CAAlB;MACA,MAAMK,MAAM,GAAGd,mBAAmB,CAAC;QAClCM,OADkC;QAElCC,aAFkC;QAGlCC,sBAHkC;QAIlCC;MAJkC,CAAD,CAAlC,CAHqC,CASrC;;MACA,IAAIM,IAAI,GAAGF,SAAS,CAACG,KAAV,CAAgBF,MAAM,GAAGF,KAAzB,CAAX;MACA,IAAIK,QAAQ,GAAGJ,SAAS,CAACK,WAAV,EAAf;;MACA,IAAIJ,MAAJ,EAAY;QACXC,IAAI,GAAGd,sBAAsB,CAACc,IAAD,EAAOD,MAAP,CAA7B,CADW,CAEX;;QACA,IAAIG,QAAJ,EAAc;UACbA,QAAQ,GAAGhB,sBAAsB,CAACgB,QAAD,EAAWH,MAAX,CAAjC;QACA;MACD;;MACD,OAAO;QACNC,IADM;QAENE;MAFM,CAAP;IAIA,CAvByB,EAuBvB,CAACX,OAAD,EAAUG,QAAV,CAvBuB,CAA1B;IAwBA,oBACC,oBAAC,KAAD,eACKC,IADL;MAEC,GAAG,EAAEL,GAFN;MAGC,KAAK,EAAEN,yBAHR;MAIC,MAAM,EAAEY;IAJT,GADD;EAOA;;EAEDP,UAAU,gBAAGV,KAAK,CAACyB,UAAN,CAAiBf,UAAjB,CAAb;EAEAA,UAAU,CAACgB,SAAX,GAAuB;IACtB;AACF;AACA;AACA;AACA;AACA;AACA;IACER,KAAK,EAAEhB,SAAS,CAACyB,MAAV,CAAiBC,UARF;;IAUtB;AACF;AACA;AACA;IACEC,QAAQ,EAAE3B,SAAS,CAAC4B,IAAV,CAAeF,UAdH;;IAgBtB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEhB,OAAO,EAAEV,SAAS,CAACyB,MA1BG;;IA4BtB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEd,aAAa,EAAEX,SAAS,CAAC6B,IAtCH;;IAwCtB;AACF;AACA;AACA;AACA;AACA;IACEjB,sBAAsB,EAAEZ,SAAS,CAAC6B,IA9CZ;;IAgDtB;AACF;AACA;IACEhB,QAAQ,EAAEb,SAAS,CAAC8B,MAAV,CAAiBJ;EAnDL,CAAvB;EAsDAlB,UAAU,CAACuB,YAAX,GAA0B;IACzBlB,QAAQ,EAAEN;EADe,CAA1B;EAIA,OAAOC,UAAP;AACA;AAED,eAAeF,WAAW,EAA1B"}